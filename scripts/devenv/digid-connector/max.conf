[app]
# possible environment values are: development, production
environment = development
# possible app_mode values are: legacy, none
app_mode = none
# possible services are: cc, cibg
userinfo_service = cc
# External url for max without trailing slash
external_base_url = https://${SERVICES_HOST}:${RDO_MAX_PORT}
session_url = http://${SERVICES_HOST}:8001/session
# Used for DigiD Mock, not needed when using cc
mocked_uzi_data_file_path = none

loglevel = debug

login_methods_file_path = login_methods.json
# This should not be set, we use DigiD mock instead
# sidebar_template = uzi_sidebar.html

# possible values: http, html
redirect_type = http
# only used with html redirect
# redirect_html_delay = 0

user_authentication_sym_key = 0000000000000000000000000000000000000000000000000000000000000000

external_http_requests_timeout_seconds = 15

[jwe]
# list with comma seperated values
# possible values are x25519, rsa
services = rsa

#rsa
jwe_sign_priv_key_path = secrets/userinfo/jwe_sign.key
jwe_sign_crt_path = secrets/userinfo/jwe_sign.crt

#x25519
# jwe_sign_nacl_priv_key = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=

[jwt]
session_jwt_issuer = nl-rdo-max-private
session_jwt_audience = nl-uzi-login-controller
session_jwt_sign_priv_key_path = secrets/userinfo/jwe_sign.key
session_jwt_sign_crt_path = secrets/userinfo/jwe_sign.crt

# optional section when login method doesn't contain irma
# [irma]
# irma_login_redirect_url = http://localhost:8001/login/yivi

# [uzi]
# uzi_login_redirect_url = https://localhost:8443/login/uzi

# optional section when userinfo service isn't cibg
# [cibg]
# cibg_exchange_token_endpoint=http://localhost:8002/get-uzi-by-exchange
# cibg_saml_endpoint=http://localhost:8002/get-uzi
# ssl_client_key=
# ssl_client_crt=
# ssl_client_verify=False
# userinfo_client_key=secrets/cibg/userinfo_client_key.key
# userinfo_client_crt=secrets/cibg/userinfo_client_key.crt
# userinfo_issuer=max
# userinfo_audience=uzipoc_register
# jwt_expiration_duration=60
# jwt_nbf_lag=10

[uvicorn]
# The host to be running on
host = 0.0.0.0
port = ${RDO_MAX_PORT}

# Are we running in debug mode? turns on auto-reload on code changes
reload = False
workers = 1

# Should we create an SSL connection through uvicorn?
use_ssl = True

# Setting for the SSL connection when enabled, defined by the use_ssl setting.
base_dir = secrets/ssl
cert_file = server.crt
key_file = server.key

[oidc]
certificates_directory = secrets/jwks-certs
rsa_private_key = secrets/oidc/selfsigned.key
rsa_private_key_crt = secrets/oidc/selfsigned.crt
issuer = https://${SERVICES_HOST}:${RDO_MAX_PORT}
authorize_endpoint = /authorize
jwks_endpoint = /jwks
accesstoken_endpoint = /token
userinfo_endpoint = /userinfo
scopes_supported = openid
clients_file = clients.json
subject_id_hash_salt = somesalt
jwt_expiration_duration = 60
jwt_nbf_lag = 10

[saml]
identity_providers_base_path = saml
xml_templates_path = saml/templates/xml
html_templates_path = saml/templates/html
base_issuer = ${SERVICES_HOST}:8007

[redis]
# Connecting to the redis server through parameters:
host = redis
port = 6379
# Enable the RedisDebugger thread
enable_debugger = False

# SSL settings, to create a TLS connection to the redis store.
ssl = False
key =
cert =
cafile =

# How long do values live in redis?
object_ttl = 600

# prefix to cached key-value pairs stored using this service
default_cache_namespace = max

# prefix to tokens, subjects and codes stored in the redis database by the OIDC library
token_namespace = tvs_token
refresh_token_namespace = tvs_refresh_token
subject_identifier_namespace = tvs_sub_id
code_namespace = tvs_auth_code

[ratelimiter]
identity_provider_outage_key = identity_provider_outage
primary_identity_provider_key = primary_identity_provider
overflow_identity_provider_key = overflow_identity_provider
primary_identity_provider_user_limit_key = primary_identity_provider_user_limit
overflow_identity_provider_user_limit_key = overflow_identity_provider_user_limit

ipaddress_max_count = 10
ipaddress_max_count_expire_seconds = 10

[oidc_client]
oidc_login_redirect_url = http://${SERVICES_HOST}:8001/login/oidc/start

[templates]
jinja_path = jinja2
vite_manifest_path = static/assets/manifest.json
